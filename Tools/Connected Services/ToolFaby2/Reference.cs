//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tools.ToolFaby2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="serviceResponse", Namespace="http://schemas.datacontract.org/2004/07/Tools")]
    [System.SerializableAttribute()]
    public partial class serviceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool processField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool process {
            get {
                return this.processField;
            }
            set {
                if ((this.processField.Equals(value) != true)) {
                    this.processField = value;
                    this.RaisePropertyChanged("process");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ToolFaby2.IAppTools")]
    public interface IAppTools {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/dailyTasks21", ReplyAction="http://tempuri.org/IAppTools/dailyTasks21Response")]
        Tools.ToolFaby2.serviceResponse dailyTasks21(string token, string ruc, string documento, string fecha, string mantis, string opcion, byte[] archivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/dailyTasks21", ReplyAction="http://tempuri.org/IAppTools/dailyTasks21Response")]
        System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> dailyTasks21Async(string token, string ruc, string documento, string fecha, string mantis, string opcion, byte[] archivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/blacklist", ReplyAction="http://tempuri.org/IAppTools/blacklistResponse")]
        Tools.ToolFaby2.serviceResponse blacklist(string token, string correo, string opcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/blacklist", ReplyAction="http://tempuri.org/IAppTools/blacklistResponse")]
        System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> blacklistAsync(string token, string correo, string opcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/reenvio", ReplyAction="http://tempuri.org/IAppTools/reenvioResponse")]
        Tools.ToolFaby2.serviceResponse reenvio(string token, string documento, string ubl, bool reenviar, bool renombrarxml, bool renombrarcdr, bool regenerar, string mantis, bool firmar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/reenvio", ReplyAction="http://tempuri.org/IAppTools/reenvioResponse")]
        System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> reenvioAsync(string token, string documento, string ubl, bool reenviar, bool renombrarxml, bool renombrarcdr, bool regenerar, string mantis, bool firmar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/storageTask", ReplyAction="http://tempuri.org/IAppTools/storageTaskResponse")]
        Tools.ToolFaby2.serviceResponse storageTask(string token, string fileName, byte[] file, string mantis, string option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/storageTask", ReplyAction="http://tempuri.org/IAppTools/storageTaskResponse")]
        System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> storageTaskAsync(string token, string fileName, byte[] file, string mantis, string option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/receptor", ReplyAction="http://tempuri.org/IAppTools/receptorResponse")]
        Tools.ToolFaby2.serviceResponse receptor(string token, string documento, string fechaEmision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/receptor", ReplyAction="http://tempuri.org/IAppTools/receptorResponse")]
        System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> receptorAsync(string token, string documento, string fechaEmision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/dailyTasksOSE", ReplyAction="http://tempuri.org/IAppTools/dailyTasksOSEResponse")]
        Tools.ToolFaby2.serviceResponse dailyTasksOSE(string token, string mantis, string opcion, string ruc, string rucsupplier, string tipoDocumento, string numeracion_identificador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppTools/dailyTasksOSE", ReplyAction="http://tempuri.org/IAppTools/dailyTasksOSEResponse")]
        System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> dailyTasksOSEAsync(string token, string mantis, string opcion, string ruc, string rucsupplier, string tipoDocumento, string numeracion_identificador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAppToolsChannel : Tools.ToolFaby2.IAppTools, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AppToolsClient : System.ServiceModel.ClientBase<Tools.ToolFaby2.IAppTools>, Tools.ToolFaby2.IAppTools {
        
        public AppToolsClient() {
        }
        
        public AppToolsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AppToolsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppToolsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppToolsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Tools.ToolFaby2.serviceResponse dailyTasks21(string token, string ruc, string documento, string fecha, string mantis, string opcion, byte[] archivo) {
            return base.Channel.dailyTasks21(token, ruc, documento, fecha, mantis, opcion, archivo);
        }
        
        public System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> dailyTasks21Async(string token, string ruc, string documento, string fecha, string mantis, string opcion, byte[] archivo) {
            return base.Channel.dailyTasks21Async(token, ruc, documento, fecha, mantis, opcion, archivo);
        }
        
        public Tools.ToolFaby2.serviceResponse blacklist(string token, string correo, string opcion) {
            return base.Channel.blacklist(token, correo, opcion);
        }
        
        public System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> blacklistAsync(string token, string correo, string opcion) {
            return base.Channel.blacklistAsync(token, correo, opcion);
        }
        
        public Tools.ToolFaby2.serviceResponse reenvio(string token, string documento, string ubl, bool reenviar, bool renombrarxml, bool renombrarcdr, bool regenerar, string mantis, bool firmar) {
            return base.Channel.reenvio(token, documento, ubl, reenviar, renombrarxml, renombrarcdr, regenerar, mantis, firmar);
        }
        
        public System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> reenvioAsync(string token, string documento, string ubl, bool reenviar, bool renombrarxml, bool renombrarcdr, bool regenerar, string mantis, bool firmar) {
            return base.Channel.reenvioAsync(token, documento, ubl, reenviar, renombrarxml, renombrarcdr, regenerar, mantis, firmar);
        }
        
        public Tools.ToolFaby2.serviceResponse storageTask(string token, string fileName, byte[] file, string mantis, string option) {
            return base.Channel.storageTask(token, fileName, file, mantis, option);
        }
        
        public System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> storageTaskAsync(string token, string fileName, byte[] file, string mantis, string option) {
            return base.Channel.storageTaskAsync(token, fileName, file, mantis, option);
        }
        
        public Tools.ToolFaby2.serviceResponse receptor(string token, string documento, string fechaEmision) {
            return base.Channel.receptor(token, documento, fechaEmision);
        }
        
        public System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> receptorAsync(string token, string documento, string fechaEmision) {
            return base.Channel.receptorAsync(token, documento, fechaEmision);
        }
        
        public Tools.ToolFaby2.serviceResponse dailyTasksOSE(string token, string mantis, string opcion, string ruc, string rucsupplier, string tipoDocumento, string numeracion_identificador) {
            return base.Channel.dailyTasksOSE(token, mantis, opcion, ruc, rucsupplier, tipoDocumento, numeracion_identificador);
        }
        
        public System.Threading.Tasks.Task<Tools.ToolFaby2.serviceResponse> dailyTasksOSEAsync(string token, string mantis, string opcion, string ruc, string rucsupplier, string tipoDocumento, string numeracion_identificador) {
            return base.Channel.dailyTasksOSEAsync(token, mantis, opcion, ruc, rucsupplier, tipoDocumento, numeracion_identificador);
        }
    }
}
